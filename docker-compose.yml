services:
  # --- 인프라 서비스 (Zookeeper, Kafka, MariaDB, MongoDB) ---
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  mariadb:
    image: mariadb:10.11
    container_name: guestbook_mariadb
    environment:
      - MARIADB_ROOT_PASSWORD=root_password
      - MARIADB_DATABASE=guestbook_db
      - MARIADB_USER=user
      - MARIADB_PASSWORD=password
    volumes:
      - mariadb_data:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: always

  mongodb:
    image: mongo:latest
    container_name: guestbook_mongodb
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    restart: always

  # --- 애플리케이션 서비스 ---

  # 서버 1: 쓰기 전용 Command Service
  server1:
    build: ./server1 # server1 폴더의 Dockerfile을 사용
    container_name: server1_command
    depends_on:
      - kafka
      - mariadb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MARIADB_URL=mysql+pymysql://user:password@mariadb/guestbook_db
    restart: always

  # 서버 2: 읽기 전용 Query Service
  server2:
    build: ./server2 # server2 폴더의 Dockerfile을 사용
    container_name: server2_query
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MONGO_URL=mongodb://mongodb:27017/
    restart: always

  # 프론트엔드: Nginx 리버스 프록시
  frontend:
    build: ./frontend
    container_name: frontend_nginx
    ports:
      - "3000:80"
    # 두 백엔드 서버가 모두 준비된 후 시작
    depends_on:
      - server1
      - server2

volumes:
  mariadb_data:
  mongo_data: